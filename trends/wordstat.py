# save_cookies.py
from playwright.sync_api import sync_playwright
import pickle

def save_cookies():
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=False)
        context = browser.new_context()
        page = context.new_page()
        page.goto("https://wordstat.yandex.ru")

        print("üîê –í–æ–π–¥–∏ –≤—Ä—É—á–Ω—É—é –∏ –Ω–∞–∂–º–∏ Enter...")
        input("‚è≥ –ñ–¥—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ...")

        cookies = context.cookies()
        with open("yandex_cookies.pkl", "wb") as f:
            pickle.dump(cookies, f)

        print("‚úÖ Cookies —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
        browser.close()

save_cookies()
import pickle
from playwright.async_api import async_playwright

async def get_wordstat_count(query: str) -> str:
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=True)
        context = await browser.new_context()

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –∫—É–∫–∏ (–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)
        with open("yandex_cookies.pkl", "rb") as f:
            cookies = pickle.load(f)
        await context.add_cookies(cookies)

        page = await context.new_page()
        await page.goto("https://wordstat.yandex.ru")

        # –í–≤–æ–¥–∏–º –∑–∞–ø—Ä–æ—Å –∏ –∂–º–µ–º –∫–Ω–æ–ø–∫—É
        await page.fill("input.textinput__control", query)
        await page.click("button.wordstat__search-button")

        try:
            # –ñ–¥—ë–º —Ç–∞–±–ª–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
            await page.wait_for_selector("tr.table__even_highlighted", timeout=10000)
        except:
            await browser.close()
            return f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ Wordstat. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."

        rows = await page.locator("tr.table__even_highlighted").all()

        for row in rows:
            word = await row.locator("td:nth-child(1)").inner_text()
            count = await row.locator("td:nth-child(2)").inner_text()
            if query.lower() in word.lower():
                await browser.close()
                return f"üîç <b>{word.strip()}</b>\nüìà <b>{count.strip()} –ø–æ–∫–∞–∑–æ–≤</b>"

        await browser.close()
        return f"üìâ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ñ—Ä–∞–∑–µ: <b>{query}</b>"