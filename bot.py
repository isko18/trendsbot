import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from config import BOT_TOKEN
from trends.amazon import get_amazon_trends
from trends.shein import get_shein_trends
from trends.trend1688 import get_1688_trends
from trends.pinterest import get_pinterest_trends

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

keyboard = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="Amazon"), KeyboardButton(text="Shein")],
    [KeyboardButton(text="1688"), KeyboardButton(text="Pinterest")]
], resize_keyboard=True)

@dp.message(lambda msg: msg.text == "/start")
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç —Ç—Ä–µ–Ω–¥—ã —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤. –ù–∞–∂–º–∏ /trends, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.")

@dp.message(lambda msg: msg.text == "/trends")
async def show_sources(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ —Ç—Ä–µ–Ω–¥–æ–≤:", reply_markup=keyboard)

@dp.message(lambda msg: msg.text == "Amazon")
async def trends_amazon(message: types.Message):
    await message.answer("üî• –ò—â—É —Ç—Ä–µ–Ω–¥—ã –Ω–∞ Amazon...")
    trends = get_amazon_trends()

    if not trends:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç—Ä–µ–Ω–¥—ã —Å Amazon.")
        return

    for item in trends:
        caption = f"<b>{item['title']}</b>\n\n<a href='{item['product_link']}'>üîó –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ Amazon</a>"
        await bot.send_photo(
            chat_id=message.chat.id,
            photo=item['image_url'],
            caption=caption,
            parse_mode='HTML'
        )


@dp.message(lambda msg: msg.text.lower() == "shein")
async def trends_shein(message: types.Message):
    await message.answer("üî• –ò—â—É —Ç—Ä–µ–Ω–¥—ã –Ω–∞ Shein...")
    trends = get_shein_trends()

    if not trends:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç—Ä–µ–Ω–¥—ã —Å Shein.")
        return

    for item in trends:
        caption = f"<b>{item['title']}</b>\n\n<a href='{item['product_link']}'>üîó –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ Shein</a>"
        await bot.send_photo(
            chat_id=message.chat.id,
            photo=item['image_url'],
            caption=caption,
            parse_mode='HTML'
        )


@dp.message(lambda msg: msg.text == "1688")
async def trends_1688(message: types.Message):
    await message.answer("üì¶ –ò—â—É —Ç—Ä–µ–Ω–¥—ã –Ω–∞ 1688...")
    trends = get_1688_trends()

    if not trends:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç—Ä–µ–Ω–¥—ã —Å 1688.")
        return

    for item in trends:
        caption = f"<b>{item['title']}</b>\n\n<a href='{item['product_link']}'>üîó –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ 1688</a>"
        await bot.send_photo(
            chat_id=message.chat.id,
            photo=item['image_url'],
            caption=caption,
            parse_mode='HTML'
        )


@dp.message(lambda msg: msg.text == "Pinterest")
async def trends_pinterest(message: types.Message):
    await message.answer("üìå –ò—â—É —Ç—Ä–µ–Ω–¥—ã –Ω–∞ Pinterest...")
    trends = get_pinterest_trends()

    if not trends:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç—Ä–µ–Ω–¥—ã —Å Pinterest.")
        return

    for item in trends:
        caption = f"<b>{item['title']}</b>\n\n<a href='{item['product_link']}'>üîó –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ Pinterest</a>"
        await bot.send_photo(
            chat_id=message.chat.id,
            photo=item['image_url'],
            caption=caption,
            parse_mode='HTML'
        )
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
